{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\home_react\\\\rn-starter\\\\src\\\\screens\\\\Map.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Slider from \"react-native-web/dist/exports/Slider\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport MapView, { PROVIDER_GOOGLE, Marker, Callout, AnimatedRegion, Animated } from 'react-native-maps';\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nvar image = {\n  uri: \"https://reactjs.org/logo-og.png\"\n};\n\nvar Map = function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      coordinates: {\n        latitude: 25.0025,\n        longitude: 51.0000\n      },\n      categorys: _this.props.navigation.state.params.data.categorys,\n      Type: _this.props.navigation.state.params.data.Type,\n      Order: _this.props.navigation.state.params.data.Order\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"chooseCategory\",\n    value: function chooseCategory(navigation) {\n      console.log(this.state);\n      navigation.navigate('showOrder', {\n        data: this.state\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.navigation.state.params.data);\n      console.warn(this.props.navigation.state.params.data);\n      var width = 20;\n      return React.createElement(ScrollView, {\n        style: {\n          height: \"100%\",\n          backgroundColor: \"#ae1fcfa\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          height: \"100%\",\n          backgroundColor: \"#ae1fcfa\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, React.createElement(MapView, {\n        provider: PROVIDER_GOOGLE,\n        style: styles.mapStyle,\n        region: {\n          latitude: 50.0025,\n          longitude: 20.0000\n        },\n        onRegionChange: function onRegionChange(result) {\n          return _this2.setState({\n            coordinates: result\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, React.createElement(Marker, {\n        coordinate: {\n          latitude: this.state.coordinates.latitude,\n          longitude: this.state.coordinates.longitude\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: [styles.Button1, {\n          borderBottomLeftRadius: 0,\n          borderTopRightRadius: 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.chooseCategory(_this2.props.navigation);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.TextButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, \" Submit\")))));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\nvar widthWindow = Dimensions.get('window').width;\nvar heightWindow = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  mapStyle: {\n    width: widthWindow,\n    height: heightWindow * \"0.79\"\n  },\n  mapStyle: {\n    width: widthWindow,\n    height: heightWindow * \"0.79\"\n  },\n  Button1: {\n    borderWidth: 3,\n    borderColor: \"#000\",\n    backgroundColor: \"#000\",\n    width: widthWindow,\n    height: heightWindow * \"0.12\",\n    alignItems: \"center\",\n    paddingTop: \"6%\"\n  },\n  TextButton: {\n    fontSize: 20,\n    color: \"#fff\",\n    justifyContent: \"center\",\n    textAlign: 'center'\n  }\n});\nexport default Map;","map":{"version":3,"sources":["C:/Users/user/Desktop/home_react/rn-starter/src/screens/Map.js"],"names":["React","Component","MapView","PROVIDER_GOOGLE","Marker","Callout","AnimatedRegion","Animated","TouchableOpacity","image","uri","Map","props","state","coordinates","latitude","longitude","categorys","navigation","params","data","Type","Order","console","log","navigate","warn","width","height","backgroundColor","styles","mapStyle","result","setState","Button1","borderBottomLeftRadius","borderTopRightRadius","chooseCategory","TextButton","widthWindow","Dimensions","get","heightWindow","StyleSheet","create","borderWidth","borderColor","alignItems","paddingTop","fontSize","color","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dimensions, Slider, SafeAreaView, Picker, Text, StyleSheet, View, TextInput, Image, Button, ScrollView, ImageBackground } from \"react-native\";\r\nimport MapView, { PROVIDER_GOOGLE, Marker, Callout, AnimatedRegion, Animated } from 'react-native-maps';\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nconst image = { uri: \"https://reactjs.org/logo-og.png\" };\r\n\r\nclass Map extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            coordinates: {\r\n                latitude: 25.0025,\r\n                longitude: 51.0000,\r\n            },\r\n            categorys: this.props.navigation.state.params.data.categorys,\r\n            Type: this.props.navigation.state.params.data.Type,\r\n            Order: this.props.navigation.state.params.data.Order,\r\n        }\r\n\r\n\r\n    }\r\n\r\n    chooseCategory(navigation) {\r\n\r\n        console.log(this.state);\r\n        navigation.navigate('showOrder', { data: this.state });\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.props.navigation.state.params.data)\r\n        console.warn(this.props.navigation.state.params.data);\r\n\r\n        const width = 20;\r\n        return (\r\n\r\n            <ScrollView style={{ height: \"100%\", backgroundColor: \"#ae1fcfa\" }} >\r\n\r\n                <View style={{ height: \"100%\", backgroundColor: \"#ae1fcfa\" }}>\r\n\r\n\r\n                    <MapView\r\n                        provider={PROVIDER_GOOGLE}\r\n                        style={styles.mapStyle}\r\n                        region={{\r\n                            latitude: 50.0025,\r\n                            longitude: 20.0000,\r\n\r\n                        }}\r\n\r\n                        onRegionChange={(result) => this.setState({ coordinates: result })}\r\n                    >\r\n\r\n                        <Marker\r\n                            coordinate={{\r\n                                latitude: this.state.coordinates.latitude,\r\n                                longitude: this.state.coordinates.longitude\r\n                            }}\r\n                        >\r\n\r\n\r\n                        </Marker>\r\n\r\n                    </MapView>\r\n                    <View style={[styles.Button1, { borderBottomLeftRadius: 0, borderTopRightRadius: 0, }]}>\r\n\r\n                        <TouchableOpacity onPress={() => this.chooseCategory(this.props.navigation)} >\r\n\r\n                            <Text style={styles.TextButton}> Submit</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </ScrollView>\r\n        );\r\n\r\n\r\n\r\n    }\r\n}\r\nconst widthWindow = Dimensions.get('window').width;\r\nconst heightWindow = Dimensions.get('window').height;\r\n\r\nconst styles = StyleSheet.create({\r\n    mapStyle: {\r\n        width: widthWindow,\r\n        height: heightWindow * \"0.79\",\r\n    }, mapStyle: {\r\n        width: widthWindow,\r\n        height: heightWindow * \"0.79\",\r\n    }, Button1: {\r\n\r\n        borderWidth: 3,\r\n        borderColor: \"#000\",\r\n        backgroundColor: \"#000\",\r\n        width: widthWindow,\r\n        height: heightWindow * \"0.12\",\r\n\r\n        alignItems: \"center\",\r\n        paddingTop: \"6%\",\r\n\r\n    },\r\n    TextButton: {\r\n        fontSize: 20,\r\n        color: \"#fff\",\r\n        justifyContent: \"center\",\r\n        textAlign: 'center',\r\n\r\n    }\r\n\r\n});\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}